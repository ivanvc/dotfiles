" Example Vim configuration.
" Copy or symlink to ~/.vimrc or ~/_vimrc.

" Pathogen
runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
call pathogen#helptags()

set nocompatible                  " Must come first because it changes other options.

syntax enable                     " Turn on syntax highlighting.
filetype on                       " Enable file type detection.
filetype indent on                " Enable specific indent.
filetype plugin indent on         " Turn on file type detection.
compiler ruby                     " Enable compiler support for ruby.

runtime macros/matchit.vim        " Load the matchit plugin.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set number                        " Show line numbers.
set ruler                         " Show cursor position.
set ai                            " Auto indent

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vim/tmp//,.  " Keep swap files in one location

set softtabstop=2
set tabstop=2                    " Global tab width.
set shiftwidth=2                 " And again, related.
set expandtab                    " Use spaces instead of tabs

set laststatus=2                 " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y\ %{fugitive#statusline()}\ %{exists('*CapsLockStatusline')?CapsLockStatusline():''}%=%-16(\ %l,%c-%v\ %)%P

colorscheme ir_black             " IR Black theme
set cursorline                   " Hightlights the current line
set colorcolumn=80               " Display 80 chars column

" Tab mappings.
map <leader>tt :tabnew<cr>
map <leader>te :tabedit
map <leader>tc :tabclose<cr>
map <leader>to :tabonly<cr>
map <leader>tn :tabnext<cr>
map <leader>tp :tabprevious<cr>
map <leader>tf :tabfirst<cr>
map <leader>tl :tablast<cr>
map <leader>tm :tabmove

" Automatic fold settings for specific files. Uncomment to use.
" autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" Unicode characters
if has("multi_byte")
  if &termencoding == ""
    let &termencoding = &encoding
  endif
  "set encoding=utf-8
  "etglobal fileencoding=utf-8 bomb
  "et fileencodings=ucs-bom,utf-8,latin1
endif

" Mini buffer explorer
map <leader>bo :MiniBufExplorer<cr>
map <leader>bc :CMiniBufExplorer<cr>
map <leader>br :UMiniBufExplorer<cr>
map <leader>bu :UMiniBufExplorer<cr>

" Rspec
map <leader>r :Rake<cr>
map <leader>R :.Rake<cr>

" Encoding
"set ff=unix fenc=utf-8 enc=utf-8

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬

function! Preserve(command)
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  execute a:command
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction
nmap _$ :call Preserve("%s/\\s\\+$//e")<CR>
nmap _= :call Preserve("normal gg=G")<CR>

" ActionScript
au Bufread,BufNewFile *.as set filetype=actionscript " Load as files
autocmd FileType actionscript setlocal sw=2 sts=2 et " Set indentation level
autocmd BufNewFile,BufRead *.mxml,*.as :nmap <C-B> :!bash ~/.vim/bin/fcshcmp.sh %:p
autocmd BufNewFile,BufRead *.mxml,*.as :nmap <C-A> :!bash ~/.vim/bin/fcshcmp.sh %:p run

let g:gist_clip_command = 'pbcopy' " Gist: copy using system clipboard
let g:gist_detect_filetype = 1     " Auto detect file type

set wildignore+=vendor/local/**    " Command-T ignore vendor folder

let g:Powerline_symbols = 'fancy'  " Display fancy characters in powerline
set t_Co=256                       " Explicitly tell Vim that the terminal supports 256 colors

" Display trailing white spaces
highlight ExtraWhitespace ctermbg=darkred guibg=red   " Set color
match ExtraWhitespace /\s\+\%#\@<!$/                  " Whitespace regex
au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/ " Don't display in insert mode
au InsertLeave * match ExtraWhitespace /\s\+$/        " Display after exiting insert mode
